ag = as.numeric(input$age)
c = as.numeric(input$chest)
n = as.numeric(input$neck)
f = as.numeric(input$forearm)
return(bdfat(ab, we, wr, h, ag, c, n, f))
})
output$bdfat_text = renderText({
if(body_fat() > 0 & body_fat() < 100) {
text = paste("The percentage of your body fat is: ")
} else {
text = paste("Something went wrong when we try to calculate your body fat percentage :( Please double check your input.")
}
return(text)
})
output$percentage = renderText({
if(body_fat() > 0 & body_fat() < 100) {
text = paste(body_fat(), "%")
} else {
text = paste("NA")
}
return(text)
})
Range = data.frame(xmin = c(0, 6, 14, 18, 25),
xmax = c(6, 14, 18, 25, 50),
ymin = -Inf, ymax = Inf,
Region= c("Essential fat 2%-5%", "Athletes 6%-13%", "Fitness 14%-17%", "Average 18%-25%","Obese 25%+"))
output$plot  = renderPlot({
if (body_fat()<100 & body_fat()>0){
ggplot(data, aes(x = BODYFAT)) +
geom_density(size = 0.5, linetype = "dashed") +
geom_rect(data = Range, inherit.aes=F, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax, fill=Region))+
scale_fill_manual("Region",values = adjustcolor(c("#99FFCC","#A35029","#82A866","#93A0CB","#2BAA92"),alpha.f = 0.3))+
xlab("Body fat percentages") + geom_vline(xintercept = body_fat(),linetype = "dashed",color="#C2151B", size=2) +
annotate(geom="text",fontface="italic", x = (body_fat()-6), y =  0.04, label = as.character(paste0(body_fat(),"%")),size = 6,color ="#C2151B") +
annotate(geom="text",fontface="italic", x = (body_fat()+6), y =  0.04 ,size = 6, color = "#C2151B")+
ggtitle("Density Plot of the Body Fat Percentage (see where you are!)") + theme_light()
}else{
NULL
}
})
output$error_text = renderText({
if (body_fat()>100 | body_fat()<0){
"Something went wrong when we try to calculate your body fat percentage :( Please double check your input."
}else{
NULL
}
})
gitlink <- a("Body Fat Project", href="https://github.com/zijinw9527/STAT628_ModuleTwo20")
output$git <- renderUI({
tagList("We'd be honor if you are interested in our work. The whole project including the data processing, modeling  and model selection has been uploaded to github. Your suggestions are welcome :", gitlink)
})
output$group = renderText("Designed by Daiyi Shi, Haoran Teng and Zijin Wang.")
output$contact = renderText("Feel free to contact us if you come across any problems while using. Email: zwang2548@wisc.edu")
}
shinyApp(ui = ui, server = server)
runApp('Desktop/STAT628/2Body_Fat_Project/HW2/code/shiny')
# app.R
library(shiny)
library(shinythemes)
library(ggplot2)
# ui
ui <- shinyUI(fluidPage(
shinythemes::themeSelector(),
titlePanel("Body Fat Calculator for Male"),
sidebarLayout(sidebarPanel(numericInput("abdomen", label = "Abdomen 2 Circumference (cm)", value = 92),
numericInput("weight", label = "Weight (lbs)", value = 177.3),
numericInput("wrist", label = "Wrist Circumference (cm)", value = 18.2),
numericInput("height", label = "Height (inches)", value = 70.3),
numericInput("age", label = "Age (years)", value = 45),
numericInput("chest", label = "Chest Circumference (cm)", value = 100.4),
numericInput("neck", label = "Neck Circumference (cm)", value = 38),
numericInput("forearm", label = "Forearm Circumference (cm)", value = 28.6),
submitButton("Calculate!"),
tags$hr(),
p("The measurement standards of this calculator refers to Behnke and Wilmore's work",
em("Evaluation and Regulation of Body Build and Composition(1974) pp. 45-48."),
" Alternatively, we find this ",
a("Measurement Guide",
href = "https://static1.squarespace.com/static/58c1609febbd1a9d3cd78dc0/t/59edf14fe9bfdff9af4505fd/1508766037975/MEASUREMENTS-GUIDE.pdf"),
" on the internet, the reference photos in it may be helpful."
),
br(),
p("For your convenience, convert centimeter to inch, kilogram to pound and vice versa by using this",
a("Unit Converter.",
href = "https://www.unitconverters.net"))
),
mainPanel(
h2(textOutput("bdfat_text")),
h2(textOutput("percentage")),
h5(textOutput("error_text")),
plotOutput("plot"),
uiOutput("git"),
h5(textOutput("group")),
h5(textOutput("contact"))
)
)
)
)
# server
bdfat <- function(ab, we, wr, h, ag, c, n, f) {
bf = 174.9061 - 1.3484*ab + 1.1144*we - 5.5715*wr - 0.4743*h - 0.9374*ag - 0.1550*c - 5.1855*n + 0.3360*f - 0.0048*ab*we + 0.0809*wr*ag + 0.0834*ab*n - 0.0052*ab*ag - 0.0159*we*n
return(round(bf, 3))
}
server <- function(input, output) {
#setwd("/Users/michael/Desktop/Fall_2019/Stat_628/")
data = read.csv("./cleandata.csv")
# Body fat part
body_fat = reactive({
ab = as.numeric(input$abdomen)
we = as.numeric(input$weight)
wr = as.numeric(input$wrist)
h = as.numeric(input$height)
ag = as.numeric(input$age)
c = as.numeric(input$chest)
n = as.numeric(input$neck)
f = as.numeric(input$forearm)
return(bdfat(ab, we, wr, h, ag, c, n, f))
})
output$bdfat_text = renderText({
if(body_fat() > 0 & body_fat() < 100) {
text = paste("The percentage of your body fat is: ")
} else {
text = paste("Something went wrong when we try to calculate your body fat percentage :( Please double check your input.")
}
return(text)
})
output$percentage = renderText({
if(body_fat() > 0 & body_fat() < 100) {
text = paste(body_fat(), "%")
} else {
text = paste("NA")
}
return(text)
})
Range = data.frame(xmin = c(0, 6, 14, 18, 25),
xmax = c(6, 14, 18, 25, 50),
ymin = -Inf, ymax = Inf,
Region= c("Essential fat 2%-5%", "Athletes 6%-13%", "Fitness 14%-17%", "Average 18%-25%","Obese 25%+"))
output$plot  = renderPlot({
if (body_fat()<100 & body_fat()>0){
ggplot(data, aes(x = BODYFAT)) +
geom_density(size = 0.5, linetype = "dashed") +
geom_rect(data = Range, inherit.aes=F, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax, fill=Region))+
scale_fill_manual("Region",values = adjustcolor(c("#99FFCC","#A35029","#82A866","#93A0CB","#2BAA92"),alpha.f = 0.3))+
xlab("Body fat percentages") + geom_vline(xintercept = body_fat(),linetype = "dashed",color="#C2151B", size=2) +
annotate(geom="text",fontface="italic", x = (body_fat()-6), y =  0.04, label = as.character(paste0(body_fat(),"%")),size = 6,color ="#C2151B") +
annotate(geom="text",fontface="italic", x = (body_fat()+6), y =  0.04 ,size = 6, color = "#C2151B")+
ggtitle("Density Plot of the Body Fat Percentage (see where you are!)") + theme_light()
}else{
NULL
}
})
output$error_text = renderText({
if (body_fat()>100 | body_fat()<0){
"Something went wrong when we try to calculate your body fat percentage :( Please double check your input."
}else{
NULL
}
})
gitlink <- a("Body Fat Project", href="https://github.com/zijinw9527/STAT628_ModuleTwo20")
output$git <- renderUI({
tagList("We'd be honor if you are interested in our work. The whole project including the data processing, modeling  and model selection has been uploaded to github. Your suggestions are welcome :", gitlink)
})
output$group = renderText("Designed by Daiyi Shi, Haoran Teng and Zijin Wang.")
output$contact = renderText("Feel free to contact us if you come across any problems while using. Email: zwang2548@wisc.edu")
}
shinyApp(ui = ui, server = server)
setwd("~/Desktop/STAT628/2Body_Fat_Project/HW2/code/shiny")
runApp()
# app.R
library(shiny)
library(shinythemes)
library(ggplot2)
# ui
ui <- shinyUI(fluidPage(
shinythemes::themeSelector(),
titlePanel("Body Fat Calculator for Male"),
sidebarLayout(sidebarPanel(numericInput("abdomen", label = "Abdomen 2 Circumference (cm)", value = 92),
numericInput("weight", label = "Weight (lbs)", value = 177.3),
numericInput("wrist", label = "Wrist Circumference (cm)", value = 18.2),
numericInput("height", label = "Height (inches)", value = 70.3),
numericInput("age", label = "Age (years)", value = 45),
numericInput("chest", label = "Chest Circumference (cm)", value = 100.4),
numericInput("neck", label = "Neck Circumference (cm)", value = 38),
numericInput("forearm", label = "Forearm Circumference (cm)", value = 28.6),
submitButton("Calculate!"),
tags$hr(),
p("The measurement standards of this calculator refers to Behnke and Wilmore's work",
em("Evaluation and Regulation of Body Build and Composition(1974) pp. 45-48."),
" Alternatively, we find this ",
a("Measurement Guide",
href = "https://static1.squarespace.com/static/58c1609febbd1a9d3cd78dc0/t/59edf14fe9bfdff9af4505fd/1508766037975/MEASUREMENTS-GUIDE.pdf"),
" on the internet, the reference photos in it may be helpful."
),
br(),
p("For your convenience, convert centimeter to inch, kilogram to pound and vice versa by using this",
a("Unit Converter.",
href = "https://www.unitconverters.net"))
),
mainPanel(
h2(textOutput("bdfat_text")),
h2(textOutput("percentage")),
h5(textOutput("error_text")),
plotOutput("plot"),
uiOutput("git"),
h5(textOutput("group")),
h5(textOutput("contact"))
)
)
)
)
# server
bdfat <- function(ab, we, wr, h, ag, c, n, f) {
bf = 174.9061 - 1.3484*ab + 1.1144*we - 5.5715*wr - 0.4743*h - 0.9374*ag - 0.1550*c - 5.1855*n + 0.3360*f - 0.0048*ab*we + 0.0809*wr*ag + 0.0834*ab*n - 0.0052*ab*ag - 0.0159*we*n
return(round(bf, 3))
}
server <- function(input, output) {
#setwd("/Users/michael/Desktop/Fall_2019/Stat_628/")
data = read.csv("./cleandata.csv")
# Body fat part
body_fat = reactive({
ab = as.numeric(input$abdomen)
we = as.numeric(input$weight)
wr = as.numeric(input$wrist)
h = as.numeric(input$height)
ag = as.numeric(input$age)
c = as.numeric(input$chest)
n = as.numeric(input$neck)
f = as.numeric(input$forearm)
return(bdfat(ab, we, wr, h, ag, c, n, f))
})
output$bdfat_text = renderText({
if(body_fat() > 0 & body_fat() < 100) {
text = paste("The percentage of your body fat is: ")
} else {
text = paste("Something went wrong when we try to calculate your body fat percentage :( Please double check your input.")
}
return(text)
})
output$percentage = renderText({
if(body_fat() > 0 & body_fat() < 100) {
text = paste(body_fat(), "%")
} else {
text = paste("NA")
}
return(text)
})
Range = data.frame(xmin = c(0, 6, 14, 18, 25),
xmax = c(6, 14, 18, 25, 50),
ymin = -Inf, ymax = Inf,
Region= c("Essential fat 2%-5%", "Athletes 6%-13%", "Fitness 14%-17%", "Average 18%-25%","Obese 25%+"))
output$plot  = renderPlot({
if (body_fat()<100 & body_fat()>0){
ggplot(data, aes(x = BODYFAT)) +
geom_density(size = 0.5, linetype = "dashed") +
geom_rect(data = Range, inherit.aes=F, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax, fill=Region))+
scale_fill_manual("Region",values = adjustcolor(c("#99FFCC","#A35029","#82A866","#93A0CB","#2BAA92"),alpha.f = 0.3))+
xlab("Body fat percentages") + geom_vline(xintercept = body_fat(),linetype = "dashed",color="#C2151B", size=2) +
annotate(geom="text",fontface="italic", x = (body_fat()-6), y =  0.04, label = as.character(paste0(body_fat(),"%")),size = 6,color ="#C2151B") +
annotate(geom="text",fontface="italic", x = (body_fat()+6), y =  0.04 ,size = 6, color = "#C2151B")+
ggtitle("Density Plot of the Body Fat Percentage (see where you are!)") + theme_light()
}else{
NULL
}
})
output$error_text = renderText({
if (body_fat()>100 | body_fat()<0){
"Something went wrong when we try to calculate your body fat percentage :( Please double check your input."
}else{
NULL
}
})
gitlink <- a("Body Fat Project", href="https://github.com/zijinw9527/STAT628_ModuleTwo20")
output$git <- renderUI({
tagList("We'd be honor if you are interested in our work. The whole project including the data processing, modeling  and model selection has been uploaded to github. Your suggestions are welcome :", gitlink)
})
output$group = renderText("Designed by Daiyi Shi, Haoran Teng and Zijin Wang.")
output$contact = renderText("Feel free to contact us if you come across any problems while using. Email: zwang2548@wisc.edu")
}
shinyApp(ui = ui, server = server)
# app.R
library(shiny)
library(shinythemes)
library(ggplot2)
# ui
ui <- shinyUI(fluidPage(
shinythemes::themeSelector(),
titlePanel("Body Fat Calculator for Male"),
sidebarLayout(sidebarPanel(numericInput("abdomen", label = "Abdomen 2 Circumference (cm)", value = 92),
numericInput("weight", label = "Weight (lbs)", value = 177.3),
numericInput("wrist", label = "Wrist Circumference (cm)", value = 18.2),
numericInput("height", label = "Height (inches)", value = 70.3),
numericInput("age", label = "Age (years)", value = 45),
numericInput("chest", label = "Chest Circumference (cm)", value = 100.4),
numericInput("neck", label = "Neck Circumference (cm)", value = 38),
numericInput("forearm", label = "Forearm Circumference (cm)", value = 28.6),
submitButton("Calculate!"),
tags$hr(),
p("The measurement standards of this calculator refers to Behnke and Wilmore's work",
em("Evaluation and Regulation of Body Build and Composition(1974) pp. 45-48."),
" Alternatively, we find this ",
a("Measurement Guide",
href = "https://static1.squarespace.com/static/58c1609febbd1a9d3cd78dc0/t/59edf14fe9bfdff9af4505fd/1508766037975/MEASUREMENTS-GUIDE.pdf"),
" on the internet, the reference photos in it may be helpful."
),
br(),
p("For your convenience, convert centimeter to inch, kilogram to pound and vice versa by using this",
a("Unit Converter.",
href = "https://www.unitconverters.net"))
),
mainPanel(
h2(textOutput("bdfat_text")),
h2(textOutput("percentage")),
h5(textOutput("error_text")),
plotOutput("plot"),
uiOutput("git"),
h5(textOutput("group")),
h5(textOutput("contact"))
)
)
)
)
# server
bdfat <- function(ab, we, wr, h, ag, c, n, f) {
bf = 174.9061 - 1.3484*ab + 1.1144*we - 5.5715*wr - 0.4743*h - 0.9374*ag - 0.1550*c - 5.1855*n + 0.3360*f - 0.0048*ab*we + 0.0809*wr*ag + 0.0834*ab*n - 0.0052*ab*ag - 0.0159*we*n
return(round(bf, 3))
}
server <- function(input, output) {
#setwd("/Users/michael/Desktop/Fall_2019/Stat_628/")
data = read.csv("./cleandata.csv")
# Body fat part
body_fat = reactive({
ab = as.numeric(input$abdomen)
we = as.numeric(input$weight)
wr = as.numeric(input$wrist)
h = as.numeric(input$height)
ag = as.numeric(input$age)
c = as.numeric(input$chest)
n = as.numeric(input$neck)
f = as.numeric(input$forearm)
return(bdfat(ab, we, wr, h, ag, c, n, f))
})
output$bdfat_text = renderText({
if(body_fat() > 0 & body_fat() < 100) {
text = paste("The percentage of your body fat is: ")
} else {
text = paste("Something went wrong when we try to calculate your body fat percentage :( Please double check your input.")
}
return(text)
})
output$percentage = renderText({
if(body_fat() > 0 & body_fat() < 100) {
text = paste(body_fat(), "%")
} else {
text = paste("NA")
}
return(text)
})
Range = data.frame(xmin = c(0, 6, 14, 18, 25),
xmax = c(6, 14, 18, 25, 50),
ymin = -Inf, ymax = Inf,
Region= c("Essential fat 2%-5%", "Athletes 6%-13%", "Fitness 14%-17%", "Average 18%-25%","Obese 25%+"))
output$plot  = renderPlot({
if (body_fat()<100 & body_fat()>0){
ggplot(data, aes(x = BODYFAT)) +
geom_density(size = 0.5, linetype = "dashed") +
geom_rect(data = Range, inherit.aes=F, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax, fill=Region))+
scale_fill_manual("Region",values = adjustcolor(c("#99FFCC","#A35029","#82A866","#93A0CB","#2BAA92"),alpha.f = 0.3))+
xlab("Body fat percentages") + geom_vline(xintercept = body_fat(),linetype = "dashed",color="#C2151B", size=2) +
annotate(geom="text",fontface="italic", x = (body_fat()-6), y =  0.04, label = as.character(paste0(body_fat(),"%")),size = 6,color ="#C2151B") +
annotate(geom="text",fontface="italic", x = (body_fat()+6), y =  0.04 ,label = as.character(body_fat()), size = 6, color = "#C2151B")+
ggtitle("Density Plot of the Body Fat Percentage (see where you are!)") + theme_light()
}else{
NULL
}
})
output$error_text = renderText({
if (body_fat()>100 | body_fat()<0){
"Something went wrong when we try to calculate your body fat percentage :( Please double check your input."
}else{
NULL
}
})
gitlink <- a("Body Fat Project", href="https://github.com/zijinw9527/STAT628_ModuleTwo20")
output$git <- renderUI({
tagList("We'd be honor if you are interested in our work. The whole project including the data processing, modeling  and model selection has been uploaded to github. Your suggestions are welcome :", gitlink)
})
output$group = renderText("Designed by Daiyi Shi, Haoran Teng and Zijin Wang.")
output$contact = renderText("Feel free to contact us if you come across any problems while using. Email: zwang2548@wisc.edu")
}
shinyApp(ui = ui, server = server)
runApp()
install.packages("PKI")
install.packages("PKI",repo="https://cran.r-project.org/package=PKI")
runApp()
# app.R
library(shiny)
library(shinythemes)
library(ggplot2)
# ui
ui <- shinyUI(fluidPage(
shinythemes::themeSelector(),
titlePanel("Body Fat Calculator for Male"),
sidebarLayout(sidebarPanel(numericInput("abdomen", label = "Abdomen 2 Circumference (cm)", value = 92),
numericInput("weight", label = "Weight (lbs)", value = 177.3),
numericInput("wrist", label = "Wrist Circumference (cm)", value = 18.2),
numericInput("height", label = "Height (inches)", value = 70.3),
numericInput("age", label = "Age (years)", value = 45),
numericInput("chest", label = "Chest Circumference (cm)", value = 100.4),
numericInput("neck", label = "Neck Circumference (cm)", value = 38),
numericInput("forearm", label = "Forearm Circumference (cm)", value = 28.6),
submitButton("Calculate!"),
tags$hr(),
p("The measurement standards of this calculator refers to Behnke and Wilmore's work",
em("Evaluation and Regulation of Body Build and Composition(1974) pp. 45-48."),
" Alternatively, we find this ",
a("Measurement Guide",
href = "https://static1.squarespace.com/static/58c1609febbd1a9d3cd78dc0/t/59edf14fe9bfdff9af4505fd/1508766037975/MEASUREMENTS-GUIDE.pdf"),
" on the internet, the reference photos in it may be helpful."
),
br(),
p("For your convenience, convert centimeter to inch, kilogram to pound and vice versa by using this",
a("Unit Converter.",
href = "https://www.unitconverters.net"))
),
mainPanel(
h2(textOutput("bdfat_text")),
h2(textOutput("percentage")),
h5(textOutput("error_text")),
plotOutput("plot"),
uiOutput("git"),
h5(textOutput("group")),
h5(textOutput("contact"))
)
)
)
)
# server
bdfat <- function(ab, we, wr, h, ag, c, n, f) {
bf = 174.9061 - 1.3484*ab + 1.1144*we - 5.5715*wr - 0.4743*h - 0.9374*ag - 0.1550*c - 5.1855*n + 0.3360*f - 0.0048*ab*we + 0.0809*wr*ag + 0.0834*ab*n - 0.0052*ab*ag - 0.0159*we*n
return(round(bf, 3))
}
server <- function(input, output) {
#setwd("/Users/michael/Desktop/Fall_2019/Stat_628/")
data = read.csv("./cleandata.csv")
# Body fat part
body_fat = reactive({
ab = as.numeric(input$abdomen)
we = as.numeric(input$weight)
wr = as.numeric(input$wrist)
h = as.numeric(input$height)
ag = as.numeric(input$age)
c = as.numeric(input$chest)
n = as.numeric(input$neck)
f = as.numeric(input$forearm)
return(bdfat(ab, we, wr, h, ag, c, n, f))
})
output$bdfat_text = renderText({
if(body_fat() > 0 & body_fat() < 100) {
text = paste("The percentage of your body fat is: ")
} else {
text = paste("Something went wrong when we try to calculate your body fat percentage :( Please double check your input.")
}
return(text)
})
output$percentage = renderText({
if(body_fat() > 0 & body_fat() < 100) {
text = paste(body_fat(), "%")
} else {
text = paste("NA")
}
return(text)
})
Range = data.frame(xmin = c(0, 6, 14, 18, 25),
xmax = c(6, 14, 18, 25, 50),
ymin = -Inf, ymax = Inf,
Region= c("Essential fat 2%-5%", "Athletes 6%-13%", "Fitness 14%-17%", "Average 18%-25%","Obese 25%+"))
output$plot  = renderPlot({
if (body_fat()<100 & body_fat()>0){
ggplot(data, aes(x = BODYFAT)) +
geom_density(size = 0.5, linetype = "dashed") +
geom_rect(data = Range, inherit.aes=F, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax, fill=Region))+
scale_fill_manual("Region",values = adjustcolor(c("#99FFCC","#A35029","#82A866","#93A0CB","#2BAA92"),alpha.f = 0.3))+
xlab("Body fat percentages") + geom_vline(xintercept = body_fat(),linetype = "dashed",color="#C2151B", size=2) +
annotate(geom="text",fontface="italic", x = (body_fat()-6), y =  0.04, label = as.character(paste0(body_fat(),"%")),size = 6,color ="#C2151B") +
annotate(geom="text",fontface="italic", x = (body_fat()+6), y =  0.04 ,label = as.character(body_fat()), size = 6, color = "#C2151B")+
ggtitle("Density Plot of the Body Fat Percentage (see where you are!)") + theme_light()
}else{
NULL
}
})
output$error_text = renderText({
if (body_fat()>100 | body_fat()<0){
"Something went wrong when we try to calculate your body fat percentage :( Please double check your input."
}else{
NULL
}
})
gitlink <- a("Body Fat Project", href="https://github.com/zijinw9527/STAT628_ModuleTwo20")
output$git <- renderUI({
tagList("We'd be honor if you are interested in our work. The whole project including the data processing, modeling  and model selection has been uploaded to github. Your suggestions are welcome :", gitlink)
})
output$group = renderText("Designed by Daiyi Shi, Haoran Teng and Zijin Wang.")
output$contact = renderText("Feel free to contact us if you come across any problems while using. Email: zwang2548@wisc.edu")
}
shinyApp(ui = ui, server = server)
library(rsconnect)
getwd
getwd()
rsconnect::deployApp('/Users/oujieri/Desktop/STAT628/2Body_Fat_Project/HW2/code/shiny')
runApp()
runApp()
